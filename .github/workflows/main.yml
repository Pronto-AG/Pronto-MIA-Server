name: Server CI
on:
  push:
    branches:
      - '**'

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      
      - name: Load Cache
        id: load-cache
        uses: actions/cache@v2
        with:
          path: | 
            ~/.nuget
          key: nuget-${{ hashFiles('./Pronto-MIA/Pronto-MIA/Pronto-MIA.csproj') }}-${{ hashFiles('./Pronto-MIA/Tests/Tests.csproj') }}

      - name: Restore solution
        working-directory: ./Pronto-MIA
        run: dotnet restore

      - name: Lint by treating warnings as errors
        working-directory: ./Pronto-MIA
        run: |
#             dotnet build -c release -o ./app --no-restore -warnAsError | tee ./buildlog.txt
#             grep '0 Error(s)' ./buildlog.txt
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    container: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Load Cache          
        id: load-cache        
        uses: actions/cache@v2
        with:
          path: |
            ~/.nuget            
          key: nuget-${{ hashFiles('./Pronto-MIA/Pronto-MIA/Pronto-MIA.csproj') }}-${{ hashFiles('./Pronto-MIA/Tests/Tests.csproj') }}

      - name: Restore solution
        working-directory: ./Pronto-MIA
        run: dotnet restore

      - name: Run Tests
        working-directory: ./Pronto-MIA
        run: dotnet test --no-restore

  build-dev:
    name: Test build
    runs-on: ubuntu-latest
    needs: test
    if: github.ref != 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build docker
        run: docker build .

  build-master:
    name: Push Docker image of master to GitHub Packages
    runs-on: ubuntu-latest
    needs: test
    #if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: pronto-ag/pronto-mia-server:master
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
