// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pronto_MIA.DataAccess;

namespace Pronto_MIA.DataAccess.Migrations
{
    [DbContext(typeof(ProntoMiaDbContext))]
    [Migration("20210422092935_Deployment-plan-add-description")]
    partial class Deploymentplanadddescription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.DeploymentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AvailableUntil")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FileUuid")
                        .IsUnique();

                    b.ToTable("DeploymentPlans");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.FcmToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("FcmTokens");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("HashGenerator")
                        .HasColumnType("text");

                    b.Property<string>("HashGeneratorOptions")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            HashGenerator = "Pbkdf2Generator",
                            HashGeneratorOptions = "{\"SaltSize\":128,\"HashIterations\":1500,\"HashSize\":512,\"Salt\":\"EBinivKFtiifU3qix9+HON8f3MSDQkOEqRZFJr4N+Rtw4ECgDQjHiZQbpL8tjpLs5vXQyZp5VuZvfntrN+RYeZi/bkCfBa51liP14RFHKE92a/Y4zS7kKn8MhE+BKx5Z7qlLmOggQ/eIc02K5rTDckqLHCt0XyzwqPlcs7KKjCo=\"}",
                            PasswordHash = new byte[] { 56, 3, 214, 131, 79, 58, 133, 157, 42, 203, 86, 218, 152, 46, 153, 181, 179, 192, 146, 32, 148, 88, 191, 155, 235, 77, 203, 1, 130, 85, 68, 183, 49, 163, 84, 3, 192, 189, 214, 94, 192, 21, 246, 220, 100, 255, 65, 183, 19, 209, 185, 212, 7, 66, 233, 121, 19, 33, 15, 230, 92, 220, 187, 103, 130, 14, 209, 70, 74, 85, 203, 235, 208, 210, 82, 164, 245, 244, 73, 96, 236, 165, 86, 74, 210, 68, 124, 121, 118, 197, 86, 207, 156, 241, 69, 99, 23, 97, 52, 246, 204, 141, 128, 33, 227, 120, 125, 207, 6, 138, 169, 17, 249, 74, 211, 61, 175, 99, 31, 25, 122, 73, 112, 245, 108, 10, 109, 13, 228, 105, 211, 127, 96, 108, 13, 51, 252, 154, 46, 29, 210, 63, 57, 248, 247, 64, 207, 160, 223, 183, 21, 157, 241, 168, 233, 188, 82, 40, 11, 167, 33, 127, 6, 33, 138, 39, 90, 93, 79, 108, 190, 92, 121, 68, 182, 173, 145, 187, 144, 97, 137, 161, 121, 233, 192, 68, 120, 66, 128, 19, 188, 231, 194, 83, 38, 150, 13, 245, 83, 240, 155, 83, 109, 215, 115, 70, 0, 92, 241, 49, 161, 133, 156, 188, 142, 242, 214, 163, 77, 190, 105, 137, 174, 184, 64, 220, 175, 161, 58, 98, 106, 29, 183, 205, 24, 246, 196, 101, 129, 96, 108, 169, 133, 60, 229, 56, 17, 132, 198, 114, 153, 41, 247, 105, 112, 134, 6, 228, 51, 118, 131, 195, 147, 71, 14, 197, 152, 234, 32, 166, 10, 155, 57, 43, 235, 88, 162, 95, 102, 71, 190, 194, 43, 19, 143, 254, 149, 34, 32, 197, 221, 250, 166, 106, 227, 163, 188, 123, 44, 211, 69, 79, 84, 170, 12, 165, 233, 99, 140, 96, 98, 247, 19, 254, 127, 167, 118, 71, 155, 126, 70, 194, 5, 92, 148, 202, 122, 207, 27, 196, 80, 72, 141, 193, 17, 20, 119, 245, 180, 141, 121, 240, 53, 244, 206, 72, 124, 243, 127, 14, 211, 182, 98, 176, 50, 117, 111, 17, 14, 135, 165, 220, 96, 32, 159, 92, 103, 151, 13, 250, 247, 15, 9, 143, 133, 4, 140, 175, 64, 135, 162, 166, 36, 29, 163, 101, 137, 248, 228, 70, 144, 148, 123, 54, 213, 176, 24, 194, 143, 163, 115, 142, 216, 194, 120, 47, 183, 151, 50, 229, 17, 228, 128, 125, 176, 209, 106, 193, 244, 165, 93, 73, 119, 53, 114, 65, 214, 42, 241, 124, 199, 107, 119, 95, 117, 40, 11, 194, 176, 16, 130, 179, 194, 171, 214, 201, 48, 158, 167, 55, 103, 44, 188, 115, 160, 108, 88, 16, 32, 212, 6, 91, 135, 32, 37, 34, 8, 133, 99, 138, 204, 20, 227, 80, 30, 220, 12, 95, 65, 218, 200, 244, 242, 99, 211, 38, 93, 51, 88, 16, 131, 122, 183, 172, 44, 40, 162, 217, 105, 42, 72, 244, 117, 109, 64, 203, 205, 9, 164, 120, 164, 191 },
                            UserName = "Franz"
                        });
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.FcmToken", b =>
                {
                    b.HasOne("Pronto_MIA.Domain.Entities.User", "Owner")
                        .WithMany("FCMTokens")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.User", b =>
                {
                    b.Navigation("FCMTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
