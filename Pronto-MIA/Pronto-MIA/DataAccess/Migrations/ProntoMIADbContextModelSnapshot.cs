// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pronto_MIA.DataAccess;

namespace Pronto_MIA.DataAccess.Migrations
{
    [DbContext(typeof(ProntoMIADbContext))]
    partial class ProntoMIADbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bio")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("WebSite")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("HashGenerator")
                        .HasColumnType("text");

                    b.Property<string>("HashGeneratorOptions")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            HashGenerator = "Pbkdf2Generator",
                            HashGeneratorOptions = "{\"SaltSize\":128,\"HashIterations\":1500,\"HashSize\":512,\"Salt\":\"GYu3gS7mbVkjIydXGxUgh72ZAZyRSwcWu9hDjCk8IMrSsskSCWE3PDxycGuicNCwKhMfLbC012TMIzhjf1z62TzIfK7D9JmzEF0M5pu2qlo2gW1ZGXMuJAhlzWpoTy9W1/3pVp5DLZ3WkGObJf8YC1doSJcMwg2Vou0cTf0DzHE=\"}",
                            PasswordHash = new byte[] { 160, 232, 84, 180, 7, 132, 70, 57, 149, 79, 235, 252, 62, 219, 84, 188, 7, 204, 132, 168, 171, 53, 252, 97, 194, 2, 203, 65, 236, 190, 3, 175, 121, 107, 126, 52, 251, 122, 199, 201, 205, 53, 222, 109, 154, 159, 233, 83, 196, 231, 12, 59, 24, 177, 212, 198, 76, 236, 82, 98, 246, 80, 13, 248, 117, 205, 236, 251, 35, 200, 110, 116, 228, 58, 123, 165, 58, 187, 221, 91, 111, 247, 139, 73, 126, 29, 102, 129, 53, 243, 179, 185, 198, 6, 57, 243, 199, 148, 225, 4, 0, 34, 252, 161, 3, 246, 193, 154, 241, 48, 215, 122, 114, 31, 105, 81, 85, 212, 101, 229, 203, 151, 165, 225, 106, 136, 49, 231, 198, 248, 144, 48, 71, 250, 146, 165, 149, 237, 193, 163, 157, 43, 160, 115, 230, 122, 41, 147, 36, 128, 181, 32, 211, 232, 124, 240, 180, 170, 20, 9, 57, 85, 202, 51, 226, 107, 70, 217, 45, 57, 22, 202, 141, 2, 152, 232, 89, 17, 178, 141, 98, 128, 56, 173, 168, 32, 40, 15, 214, 186, 224, 127, 198, 223, 18, 114, 244, 229, 135, 53, 84, 81, 168, 232, 54, 74, 139, 243, 198, 122, 27, 41, 179, 68, 205, 63, 35, 12, 4, 184, 113, 50, 11, 246, 6, 170, 106, 122, 9, 186, 104, 25, 29, 8, 249, 92, 105, 42, 178, 130, 139, 33, 167, 87, 27, 65, 73, 77, 67, 255, 39, 119, 155, 185, 212, 166, 52, 95, 56, 211, 39, 246, 42, 184, 213, 28, 19, 73, 216, 142, 227, 143, 82, 172, 54, 152, 95, 34, 84, 34, 215, 97, 234, 113, 109, 79, 53, 231, 64, 143, 155, 211, 67, 45, 8, 42, 179, 169, 224, 40, 128, 163, 91, 67, 83, 87, 94, 39, 186, 142, 108, 249, 213, 225, 50, 234, 23, 159, 179, 203, 206, 210, 79, 121, 68, 119, 191, 99, 78, 135, 41, 1, 153, 230, 178, 108, 15, 145, 4, 253, 120, 233, 92, 203, 116, 247, 6, 137, 10, 60, 234, 54, 175, 117, 241, 116, 153, 1, 55, 168, 1, 248, 135, 104, 144, 88, 213, 250, 22, 32, 204, 86, 51, 56, 30, 108, 146, 51, 182, 177, 35, 73, 171, 202, 119, 0, 31, 138, 96, 35, 115, 171, 103, 66, 145, 226, 95, 228, 67, 217, 5, 219, 187, 107, 115, 80, 187, 89, 1, 188, 78, 112, 241, 108, 24, 59, 112, 229, 238, 64, 88, 100, 2, 25, 208, 187, 49, 115, 100, 144, 51, 179, 101, 7, 54, 121, 41, 30, 200, 203, 79, 208, 100, 103, 97, 33, 76, 138, 198, 200, 212, 194, 37, 210, 77, 234, 70, 109, 244, 174, 89, 83, 161, 135, 160, 39, 204, 247, 47, 130, 195, 12, 142, 112, 75, 87, 68, 214, 178, 72, 139, 69, 109, 221, 250, 179, 114, 13, 56, 16, 249, 66, 141, 146, 166, 73, 192, 116, 184, 94, 123, 80, 166, 138, 192, 109, 211, 204, 124, 74, 88, 22 },
                            UserName = "Franz"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
