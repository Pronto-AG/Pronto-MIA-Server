// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pronto_MIA.DataAccess;

namespace Pronto_MIA.DataAccess.Migrations
{
    [DbContext(typeof(ProntoMiaDbContext))]
    [Migration("20210409094239_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.DeploymentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AvailableUntil")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FileUuid")
                        .IsUnique();

                    b.ToTable("DeploymentPlans");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.FcmToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("FcmTokens");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("HashGenerator")
                        .HasColumnType("text");

                    b.Property<string>("HashGeneratorOptions")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            HashGenerator = "Pbkdf2Generator",
                            HashGeneratorOptions = "{\"SaltSize\":128,\"HashIterations\":1500,\"HashSize\":512,\"Salt\":\"aeYCDQDHUNO3WE6ZB6+LlUAKBAkdENVkXH90T0p+t5N8EFnP1G6bOFPhfGGb70PRcMCqnGQ0N7+XankpylHTOi4FQWABj0qeeOrrundV1h7G55RHcYZux5TBfW5OhKgvh3s4wuHgJVL/KX3P9dYkyXdb5Md9TM7iMWOJiakNFuY=\"}",
                            PasswordHash = new byte[] { 18, 143, 34, 106, 143, 214, 36, 167, 205, 82, 8, 208, 29, 140, 139, 189, 146, 220, 191, 18, 111, 236, 149, 166, 122, 112, 218, 23, 32, 42, 246, 239, 120, 179, 40, 91, 79, 113, 76, 212, 176, 174, 255, 234, 57, 54, 147, 188, 229, 235, 200, 99, 231, 10, 181, 147, 2, 227, 106, 87, 212, 6, 9, 223, 26, 166, 223, 210, 2, 38, 7, 82, 173, 80, 215, 54, 243, 96, 232, 149, 80, 123, 54, 124, 113, 89, 3, 75, 109, 121, 89, 58, 213, 50, 119, 108, 14, 199, 39, 158, 20, 184, 94, 221, 121, 96, 95, 74, 88, 86, 149, 35, 110, 103, 214, 232, 129, 206, 150, 38, 98, 250, 197, 184, 91, 17, 43, 235, 181, 26, 241, 93, 129, 207, 251, 43, 52, 90, 98, 241, 165, 84, 17, 122, 95, 254, 138, 228, 8, 92, 113, 93, 194, 251, 70, 104, 229, 81, 138, 232, 250, 41, 94, 24, 3, 117, 161, 18, 10, 162, 69, 30, 212, 185, 171, 146, 223, 203, 113, 169, 30, 47, 99, 243, 117, 176, 122, 153, 207, 153, 157, 214, 79, 17, 131, 201, 99, 79, 67, 194, 158, 146, 179, 218, 239, 49, 141, 91, 191, 149, 9, 12, 99, 123, 34, 37, 24, 197, 239, 92, 106, 164, 92, 54, 74, 20, 113, 103, 68, 159, 102, 28, 55, 165, 229, 156, 199, 128, 178, 251, 245, 86, 21, 182, 244, 42, 9, 71, 61, 40, 247, 150, 95, 73, 214, 220, 80, 22, 136, 162, 12, 136, 151, 81, 174, 168, 240, 202, 60, 223, 70, 99, 224, 41, 216, 200, 236, 246, 116, 20, 133, 149, 187, 188, 139, 118, 81, 201, 28, 233, 149, 132, 117, 155, 54, 52, 151, 48, 123, 100, 40, 136, 50, 246, 182, 118, 47, 32, 237, 173, 180, 121, 172, 166, 31, 226, 92, 212, 44, 195, 121, 133, 231, 204, 121, 165, 71, 237, 89, 56, 249, 63, 207, 244, 21, 185, 128, 144, 132, 25, 94, 28, 198, 9, 229, 148, 75, 254, 68, 131, 152, 234, 247, 72, 43, 207, 169, 212, 72, 105, 64, 104, 149, 131, 248, 17, 5, 208, 99, 138, 93, 23, 102, 214, 200, 235, 124, 31, 71, 133, 136, 199, 92, 108, 4, 142, 35, 21, 211, 155, 17, 117, 181, 225, 50, 202, 26, 153, 44, 151, 16, 98, 128, 202, 196, 108, 29, 24, 13, 230, 10, 91, 41, 27, 150, 189, 82, 166, 112, 64, 5, 29, 142, 222, 171, 38, 141, 231, 197, 132, 233, 236, 64, 64, 225, 139, 220, 107, 83, 185, 24, 209, 202, 80, 224, 201, 95, 116, 86, 158, 246, 65, 171, 64, 61, 152, 186, 72, 210, 150, 9, 210, 213, 143, 193, 95, 198, 69, 23, 167, 134, 105, 62, 92, 11, 230, 126, 68, 8, 59, 191, 226, 147, 38, 230, 208, 179, 240, 24, 94, 197, 21, 28, 59, 48, 114, 109, 103, 247, 66, 50, 173, 47, 161, 67, 175, 14, 24, 139, 44, 208, 158 },
                            UserName = "Franz"
                        });
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.FcmToken", b =>
                {
                    b.HasOne("Pronto_MIA.Domain.Entities.User", "Owner")
                        .WithMany("FCMTokens")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Pronto_MIA.Domain.Entities.User", b =>
                {
                    b.Navigation("FCMTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
