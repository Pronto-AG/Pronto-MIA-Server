name: Server release CI
on:
  release:
    types: [published]

jobs:
  lint:
    name: Run linter
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Load Nuget cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore solution
        working-directory: ./Pronto-MIA
        run: dotnet restore

      - name: Lint by treating warnings as errors
        working-directory: ./Pronto-MIA
        run: |
#             dotnet build -c release -o ./app --no-restore -warnAsError | tee ./buildlog.txt
#             grep '0 Error(s)' ./buildlog.txt
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    container: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Load Nuget cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore solution
        working-directory: ./Pronto-MIA
        run: dotnet restore

      - name: Run Tests
        working-directory: ./Pronto-MIA
        run: dotnet test --no-restore

  build-master:
    name: Push Docker image of release to GitHub Container Registry
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Github-Containers
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/pronto-ag/pronto-mia-server:${{ github.ref:10 }}
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Build documentation
        uses: mattnotmitt/doxygen-action@v1
        with:
          doxyfile-path: ./doxygen.conf
          enable-latex: true
